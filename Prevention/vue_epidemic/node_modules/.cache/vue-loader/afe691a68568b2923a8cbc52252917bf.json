{"remainingRequest":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\src\\components\\homepage\\homepage.vue?vue&type=template&id=2a87c4e2&scoped=true&","dependencies":[{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\src\\components\\homepage\\homepage.vue","mtime":1623840209000},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627120038379},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1627120054798},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627120038379},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js","mtime":1627120054798}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}