{"remainingRequest":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\babel-loader\\lib\\index.js!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\src\\components\\main\\myNotice.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\src\\components\\main\\myNotice.vue","mtime":1623840209000},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627120038379},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\babel-loader\\lib\\index.js","mtime":1627120038376},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627120038379},{"path":"D:\\前端开发\\Campus-epidemic-prevention-and-control-syste\\Prevention\\vue_epidemic\\node_modules\\vue-loader\\lib\\index.js","mtime":1627120054798}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaG93OiB0cnVlLAogICAgICBVc2VyU2l6ZTogMCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIHBhZ2VTaXplOiA1LAogICAgICBwYWdlTm86IDEKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXR2YWx1ZSh0aGlzLnBhZ2VTaXplLCB0aGlzLnBhZ2VObyk7CiAgfSwKICBmaWx0ZXJzOiB7CiAgICBkYXRlOiBmdW5jdGlvbiBkYXRlKHRpbWUpIHsKICAgICAgdmFyIGR0ID0gbmV3IERhdGUodGltZSk7IC8vIHl5eXktbW0tZGQKCiAgICAgIHZhciB5ID0gZHQuZ2V0RnVsbFllYXIoKTsKICAgICAgdmFyIG0gPSBkdC5nZXRNb250aCgpICsgMTsKICAgICAgdmFyIGQgPSBkdC5nZXREYXRlKCk7CiAgICAgIHZhciBoaCA9IGR0LmdldEhvdXJzKCk7CiAgICAgIHZhciBtbSA9IGR0LmdldE1pbnV0ZXMoKTsKICAgICAgdmFyIHNzID0gZHQuZ2V0U2Vjb25kcygpOwogICAgICByZXR1cm4geSArICItIiArIG0gKyAiLSIgKyBkICsgIiAgIiArIGhoICsgIjoiICsgbW0gKyAiOiIgKyBzczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9wZW4yOiBmdW5jdGlvbiBvcGVuMih2KSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIG1lc3NhZ2U6IHYsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIOW3suivu+S4juacquivu+i9rOaNogogICAgICogQHBhcmFtIGluZGV4CiAgICAgKiBAcGFyYW0gcm93CiAgICAgKi8KICAgIHJlYWROOiBmdW5jdGlvbiByZWFkTihpbmRleCwgcm93KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRheGlvc2p3dCh7CiAgICAgICAgdXJsOiAiL3N0dWRlbnRzL2dvd2VpZHUiLAogICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgZGF0YTogewogICAgICAgICAgbl9pZDogcm93Lm5faWQKICAgICAgICB9LAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MocmVzdWx0KSB7CiAgICAgICAgICBfdGhpcy5vcGVuMign5bey5L+u5pS55Li65pyq6K+7Jyk7CgogICAgICAgICAgX3RoaXMuZ2V0dmFsdWUoX3RoaXMucGFnZVNpemUsIF90aGlzLnBhZ2VObyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZWFkWTogZnVuY3Rpb24gcmVhZFkoaW5kZXgsIHJvdykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGF4aW9zand0KHsKICAgICAgICB1cmw6ICIvc3R1ZGVudHMvZ295aWR1IiwKICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIG5faWQ6IHJvdy5uX2lkCiAgICAgICAgfSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKHJlc3VsdCkgewogICAgICAgICAgX3RoaXMyLmdldG5ldygpOwoKICAgICAgICAgIF90aGlzMi5vcGVuMign5bey5L+u5pS55Li65bey6K+7Jyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDmiJHnmoTpgJrnn6XliIbpobXojrflj5bmlbDmja7kuI7mlbDph48KICAgICAqICovCiAgICBnZXR2YWx1ZTogZnVuY3Rpb24gZ2V0dmFsdWUocGFnZU51bSwgY3VyclBhZ2UpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRheGlvc2p3dCh7CiAgICAgICAgdXJsOiAiL3N0dWRlbnRzL2dldE5vdGljZSIsCiAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBwYWdlTnVtOiBwYWdlTnVtLAogICAgICAgICAgY3VyclBhZ2U6IGN1cnJQYWdlIC0gMQogICAgICAgIH0sCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhyZXN1bHQpIHsKICAgICAgICAgIF90aGlzMy5Vc2VyU2l6ZSA9IHJlc3VsdC50b3RhbDsKICAgICAgICAgIHJlc3VsdC5kYXRhLmZvckVhY2goZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICAgICAgdi50eXBlMSA9ICLmnKror7siOwogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpczMudGFibGVEYXRhID0gcmVzdWx0LmRhdGE7CgogICAgICAgICAgX3RoaXMzLmdldG5ldygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICog6I635Y+W55qE5oiR6YCa55+l5bey6K+75YiX6KGoKOS+m+W3suivu+acquivu+eKtuaAgea4suafkykKICAgICAqLwogICAgZ2V0bmV3OiBmdW5jdGlvbiBnZXRuZXcoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coIui/m+WFpWdldG5ldyIpOyAvL+etieWQjOS6jue7keWumgoKICAgICAgdGhpcy4kYXhpb3Nqd3QoewogICAgICAgIHVybDogIi9zdHVkZW50cy9nZXROb3RpY2VSZWFkIiwKICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgIGRhdGE6IHt9LAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MocmVzdWx0KSB7CiAgICAgICAgICAvL+WIpOaWreaYr+WQpuW3suivu+acquivuwogICAgICAgICAgcmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgIHZhciB2YWwgPSBpdGVtLm5faWQ7CgogICAgICAgICAgICBfdGhpczQudGFibGVEYXRhLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBpbmRleCkgewogICAgICAgICAgICAgIGlmICh2YWwgPT0gdmFsdWUubl9pZCkgewogICAgICAgICAgICAgICAgdmFsdWUudHlwZTEgPSAi5bey6K+7IjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvL+WIhumhtQogICAgaGFuZGxlU2l6ZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2l6ZUNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5wYWdlU2l6ZSA9IHZhbDsKICAgICAgdGhpcy5nZXR2YWx1ZSh0aGlzLnBhZ2VTaXplLCB0aGlzLnBhZ2VObyk7CiAgICB9LAogICAgaGFuZGxlQ3VycmVudENoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ3VycmVudENoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5wYWdlTm8gPSB2YWw7CiAgICAgIHRoaXMuZ2V0dmFsdWUodGhpcy5wYWdlU2l6ZSwgdGhpcy5wYWdlTm8pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["myNotice.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <el-row>\n            <el-col :span=\"24\">\n                <el-card>\n                    <div slot=\"header\" class=\"clearfix\" style=\"text-align:center\">\n                        <span>我的通知</span>\n                    </div>\n                    <el-table\n                            :data=\"tableData\"\n                            border\n                            :default-sort=\"{prop: 'date', order: 'descending'}\"\n                            style=\"width: 100%\">\n                        <el-table-column\n                                prop=\"n_id\"\n                                sortable\n                                label=\"序列号\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"title\"\n                                label=\"主题\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"type1\"\n                                label=\"状态\">\n                        </el-table-column>\n                        <el-table-column\n                                label=\"创建时间\">\n                            <template slot-scope=\"scope\">{{ scope.row.createtime | date}}</template>\n                        </el-table-column>\n                        <el-table-column\n                                label=\"操作\">\n                            <template slot-scope=\"scope\">\n                                <el-button style=\"padding: 3px 0\" type=\"text\" @click=\"readN(scope.$index, scope.row)\">\n                                    未读\n                                </el-button>\n                                <el-button style=\"padding: 3px 0\" type=\"text\" @click=\"readY(scope.$index, scope.row)\">\n                                    已读\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                    <div class=\"block\" style=\"text-align:center;margin-top:20px\">\n                        <el-pagination\n                                @size-change=\"handleSizeChange\"\n                                @current-change=\"handleCurrentChange\"\n                                :current-page=\"currentPage\"\n                                :page-sizes=\"[5, 10, 15, 20,25]\"\n                                :page-size=\"5\"\n                                layout=\"total, sizes, prev, pager, next, jumper\"\n                                :total=\"UserSize\">\n                        </el-pagination>\n                    </div>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                show: true,\n                UserSize: 0,\n                currentPage: 1,\n                tableData: [],\n                pageSize: 5,\n                pageNo: 1,\n            }\n        },\n        created() {\n            this.getvalue(this.pageSize, this.pageNo);\n        },\n        filters: {\n            date(time) {\n                var dt = new Date(time);\n                // yyyy-mm-dd\n                var y = dt.getFullYear();\n                var m = dt.getMonth() + 1;\n                var d = dt.getDate();\n                var hh = dt.getHours();\n                var mm = dt.getMinutes();\n                var ss = dt.getSeconds();\n                return y + \"-\" + m + \"-\" + d + \"  \" + hh + \":\" + mm + \":\" + ss\n            },\n        },\n        methods: {\n            open2(v) {\n                this.$message({\n                    message: v,\n                    type: 'success'\n                });\n            },\n            /**\n             * 已读与未读转换\n             * @param index\n             * @param row\n             */\n            readN(index, row) {\n                this.$axiosjwt({\n                    url:\"/students/goweidu\",\n                    method:\"get\",\n                    data:{\n                        n_id:row.n_id\n                    },\n                    success: (result) => {\n                        this.open2('已修改为未读')\n                        this.getvalue(this.pageSize, this.pageNo);\n                    }\n                });\n            },\n            readY(index, row) {\n                this.$axiosjwt({\n                    url:\"/students/goyidu\",\n                    method:\"get\",\n                    data:{\n                        n_id:row.n_id\n                    },\n                    success: (result) => {\n                        this.getnew()\n                        this.open2('已修改为已读')\n                    }\n                });\n            },\n\n\n            /**\n             * 我的通知分页获取数据与数量\n             * */\n            getvalue(pageNum, currPage) {\n                this.$axiosjwt({\n                    url: \"/students/getNotice\",\n                    method: \"get\",\n                    data: {\n                        pageNum: pageNum,\n                        currPage: currPage - 1\n                    },\n                    success: (result) => {\n                        this.UserSize = result.total;\n                        result.data.forEach((v, i) => {\n                            v.type1 = \"未读\"\n                        })\n                        this.tableData = result.data;\n                        this.getnew()\n                    }\n                });\n            },\n            /**\n             * 获取的我通知已读列表(供已读未读状态渲染)\n             */\n            getnew() {\n                console.log(\"进入getnew\")\n                //等同于绑定\n                this.$axiosjwt({\n                    url:\"/students/getNoticeRead\",\n                    method:\"get\",\n                    data:{},\n                    success: (result) => {\n                        //判断是否已读未读\n                        result.forEach(((item, index) => {\n                            let val = item.n_id;\n                            this.tableData.forEach((value, index) => {\n                                if (val == value.n_id) {\n                                    value.type1 = \"已读\"\n                                }\n                            })\n                        }))\n                    }\n                });\n            },\n            //分页\n            handleSizeChange(val) {\n                this.pageSize = val;\n                this.getvalue(this.pageSize, this.pageNo)\n            },\n            handleCurrentChange(val) {\n                this.pageNo = val;\n                this.getvalue(this.pageSize, this.pageNo)\n            }\n        },\n    }\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>\n"],"sourceRoot":"src/components/main"}]}